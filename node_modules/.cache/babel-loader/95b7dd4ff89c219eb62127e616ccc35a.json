{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michael/aplicacao01/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Container, Form } from './styles';\nimport logo from '../../assets/logo.png';\nimport api from '../../services/api';\nimport CompareList from '../../components/CompareList';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      repositoryError: false,\n      repositoryInput: '',\n      repositories: []\n    };\n\n    _this.handleLocalStorage = function (repositorio) {\n      if (typeof Storage !== 'undefined') {\n        localStorage = repositorio;\n      }\n    };\n\n    _this.handleAddRepository =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _ref2, repository;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return api.get(\"/repos/\".concat(_this.state.repositoryInput));\n\n              case 5:\n                _ref2 = _context.sent;\n                repository = _ref2.data;\n                repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n                _this.setState({\n                  repositoryInput: '',\n                  repositories: [].concat(_toConsumableArray(_this.state.repositories), [repository]),\n                  repositoryError: false\n                });\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  repositoryError: true\n                });\n\n              case 14:\n                _context.prev = 14;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 11, 14, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"Github Compare\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Form, {\n        withError: this.state.repositoryError,\n        onSubmit: this.handleAddRepository,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"usu\\xE1rio/reposit\\xF3rio\",\n        value: this.state.repositoryInput,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            repositoryInput: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-pulse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : 'OK')), React.createElement(CompareList, {\n        repositories: this.state.repositories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/michael/aplicacao01/src/pages/Main/index.js"],"names":["React","Component","moment","Container","Form","logo","api","CompareList","Main","state","loading","repositoryError","repositoryInput","repositories","handleLocalStorage","repositorio","Storage","localStorage","handleAddRepository","e","preventDefault","setState","get","repository","data","lastCommit","pushed_at","fromNow","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Container, Form } from './styles';\nimport logo from '../../assets/logo.png';\nimport api from '../../services/api';\n\nimport CompareList from '../../components/CompareList';\n\nexport default class Main extends Component {\n  state = {\n    loading: false,\n    repositoryError: false,\n    repositoryInput: '',\n    repositories: [],\n  };\n\n  handleLocalStorage = (repositorio) => {\n    if (typeof Storage !== 'undefined') {\n      localStorage = repositorio;\n    }\n  };\n\n  handleAddRepository = async (e) => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    try {\n      const { data: repository } = await api.get(`/repos/${this.state.repositoryInput}`);\n\n      repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n      this.setState({\n        repositoryInput: '',\n        repositories: [...this.state.repositories, repository],\n        repositoryError: false,\n      });\n    } catch (err) {\n      this.setState({ repositoryError: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <img src={logo} alt=\"Github Compare\" />\n\n        <Form withError={this.state.repositoryError} onSubmit={this.handleAddRepository}>\n          <input\n            type=\"text\"\n            placeholder=\"usuário/repositório\"\n            value={this.state.repositoryInput}\n            onChange={e => this.setState({ repositoryInput: e.target.value })}\n          />\n          <button type=\"submit\">\n            {this.state.loading ? <i className=\"fa fa-spinner fa-pulse\" /> : 'OK'}\n          </button>\n        </Form>\n\n        <CompareList repositories={this.state.repositories} />\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}