{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michael/aplicacao01/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michael/aplicacao01/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Container, Form } from './styles';\nimport logo from '../../assets/logo.png';\nimport api from '../../services/api';\nimport CompareList from '../../components/CompareList';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      repositoryError: false,\n      repositoryInput: '',\n      repositories: []\n    };\n\n    _this.handleAddRepository =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _ref2, repository, localRepositories;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return api.get(\"/repos/\".concat(_this.state.repositoryInput));\n\n              case 5:\n                _ref2 = _context.sent;\n                repository = _ref2.data;\n                repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n                _this.setState({\n                  repositoryInput: '',\n                  repositories: [].concat(_toConsumableArray(_this.state.repositories), [repository]),\n                  repositoryError: false\n                });\n\n                _context.next = 11;\n                return _this.getLocalRepositories();\n\n              case 11:\n                localRepositories = _context.sent;\n                _context.next = 14;\n                return localStorage.setItem('@GitCompare:repositories', JSON.stringify([].concat(_toConsumableArray(localRepositories), [repository])));\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  repositoryError: true\n                });\n\n              case 19:\n                _context.prev = 19;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(19);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 16, 19, 22]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getLocalRepositories =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t1 = JSON;\n              _context2.next = 3;\n              return localStorage.getItem('@GitCompare:repositories');\n\n            case 3:\n              _context2.t2 = _context2.sent;\n              _context2.t0 = _context2.t1.parse.call(_context2.t1, _context2.t2);\n\n              if (_context2.t0) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t0 = [];\n\n            case 7:\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          repositories = _this$state.repositories,\n          repositoryInput = _this$state.repositoryInput,\n          repositoryError = _this$state.repositoryError,\n          loading = _this$state.loading;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"Github Compare\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Form, {\n        withError: repositoryError,\n        onSubmit: this.handleAddRepository,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"usu\\xE1rio/reposit\\xF3rio\",\n        value: repositoryInput,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            repositoryInput: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, loading ? React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-pulse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : 'OK')), React.createElement(CompareList, {\n        repositories: repositories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/michael/aplicacao01/src/pages/Main/index.js"],"names":["React","Component","moment","Container","Form","logo","api","CompareList","Main","state","loading","repositoryError","repositoryInput","repositories","handleAddRepository","e","preventDefault","setState","get","repository","data","lastCommit","pushed_at","fromNow","getLocalRepositories","localRepositories","localStorage","setItem","JSON","stringify","getItem","parse","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Container, Form } from './styles';\nimport logo from '../../assets/logo.png';\nimport api from '../../services/api';\n\nimport CompareList from '../../components/CompareList';\n\nexport default class Main extends Component {\n  state = {\n    loading: false,\n    repositoryError: false,\n    repositoryInput: '',\n    repositories: [],\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n  }\n\n  handleAddRepository = async (e) => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    try {\n      const { data: repository } = await api.get(`/repos/${this.state.repositoryInput}`);\n\n      repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n      this.setState({\n        repositoryInput: '',\n        repositories: [...this.state.repositories, repository],\n        repositoryError: false,\n      });\n\n      const localRepositories = await this.getLocalRepositories();\n\n      await localStorage.setItem(\n        '@GitCompare:repositories',\n        JSON.stringify([...localRepositories, repository]),\n      );\n    } catch (err) {\n      this.setState({ repositoryError: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  getLocalRepositories = async () => JSON.parse(await localStorage.getItem('@GitCompare:repositories')) || [];\n\n  render() {\n    const {\n      repositories, repositoryInput, repositoryError, loading,\n    } = this.state;\n    return (\n      <Container>\n        <img src={logo} alt=\"Github Compare\" />\n\n        <Form withError={repositoryError} onSubmit={this.handleAddRepository}>\n          <input\n            type=\"text\"\n            placeholder=\"usuário/repositório\"\n            value={repositoryInput}\n            onChange={e => this.setState({ repositoryInput: e.target.value })}\n          />\n          <button type=\"submit\">{loading ? <i className=\"fa fa-spinner fa-pulse\" /> : 'OK'}</button>\n        </Form>\n\n        <CompareList repositories={repositories} />\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}